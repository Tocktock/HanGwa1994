#pragma once
#include <Windows.h>
#include "Macro.h"

enum RES_TYPE
{
	RES_TYPE_BLOCK00,
	RES_TYPE_BLOCK01,
	RES_TYPE_BLOCK02,
	RES_TYPE_BLOCK03,
	RES_TYPE_BLOCK04,
	RES_TYPE_BLOCK05,
	RES_TYPE_BLOCK06,
	RES_TYPE_BLOCK07,
	RES_TYPE_BLOCK08,
	RES_TYPE_BLOCK09,
	RES_TYPE_BLOCK10,
	RES_TYPE_BLOCK11,
	RES_TYPE_BLOCK12,
	RES_TYPE_BLOCK13,
	RES_TYPE_BLOCK14,
	RES_TYPE_TANK_DOWN00,
	RES_TYPE_TANK_DOWN01,
	RES_TYPE_TANK_UP00,
	RES_TYPE_TANK_UP01,
	RES_TYPE_TANK_RIGHT00,
	RES_TYPE_TANK_RIGHT01,
	RES_TYPE_TANK_LEFT00,
	RES_TYPE_TANK_LEFT01,
	RES_TYPE_ETANK_DOWN00,
	RES_TYPE_ETANK_DOWN01,
	RES_TYPE_ETANK_DOWN02,
	RES_TYPE_ETANK_LEFT00,
	RES_TYPE_ETANK_LEFT01,
	RES_TYPE_ETANK_LEFT02,
	RES_TYPE_ETANK_RIGHT00,
	RES_TYPE_ETANK_RIGHT01,
	RES_TYPE_ETANK_RIGHT02,
	RES_TYPE_ETANK_UP00,
	RES_TYPE_ETANK_UP01,
	RES_TYPE_ETANK_UP02,
	RES_TYPE_ENEMYICON,
	RES_TYPE_EXPLOSION0,
	RES_TYPE_EXPLOSION1,
	RES_TYPE_EXPLOSION2,
	RES_TYPE_EXPLOSION3,
	RES_TYPE_EXPLOSION4,
	RES_TYPE_MISSILE,
	RES_TYPE_PLAYERICON,
	RES_TYPE_SHIELD00,
	RES_TYPE_SHIELD01,
	RES_TYPE_STAGEICON,


	RES_TYPE_END
};

class Bitmap;
class ResourceManager
{
private:

	Bitmap* m_arrBitmap[RES_TYPE_END];
	static ResourceManager* m_this;
	ResourceManager();

public:
	static ResourceManager *GetInstance()
	{
		if (m_this == NULL)
			m_this = new ResourceManager();

		else
			return m_this;
	}
	void Init(HWND hWnd);
	Bitmap* GetImage(RES_TYPE type);

	inline void Release()
	{
		for (int i = 0; i < RES_TYPE_END; i++)
		{
			SAFE_DELETE(m_arrBitmap[i]);
		}
		SAFE_DELETE(m_this);
	}
	~ResourceManager();
};

